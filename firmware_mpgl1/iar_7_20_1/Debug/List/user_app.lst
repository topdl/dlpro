###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        16/Jun/2016  16:34:44
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpg_common\application\user_app.c
#    Command line =  
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpg_common\application\user_app.c -D
#        MPGL1 -D MPG1 --preprocess=cl
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\Debug\List\ -lC
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\Debug\List\ -o
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\Debug\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config F:\elenic\arm\INC\c\DLib_Config_Normal.h -I
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\ -I
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\..\bsp\ -I
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\..\drivers\ -I
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\..\application\ -I
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\
#        -I
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\application\
#        -I
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\cmsis\
#        -I
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\drivers\
#        -On --use_c++_inline -I F:\elenic\arm\CMSIS\Include\
#    List file    =  
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\Debug\List\user_app.lst
#    Object file  =  
#        F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpgl1\iar_7_20_1\Debug\Obj\user_app.o
#
###############################################################################

F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpg_common\application\user_app.c
      1          /**********************************************************************************************************************
      2          File: user_app.c                                                                
      3          
      4          ----------------------------------------------------------------------------------------------------------------------
      5          To start a new task using this user_app as a template:
      6           1. Copy both user_app.c and user_app.h to the Application directory
      7           2. Rename the files yournewtaskname.c and yournewtaskname.h
      8           3. Add yournewtaskname.c and yournewtaskname.h to the Application Include and Source groups in the IAR project
      9           4. Use ctrl-h (make sure "Match Case" is checked) to find and replace all instances of "user_app" with "yournewtaskname"
     10           5. Use ctrl-h to find and replace all instances of "UserApp" with "YourNewTaskName"
     11           6. Use ctrl-h to find and replace all instances of "USER_APP" with "YOUR_NEW_TASK_NAME"
     12           7. Add a call to YourNewTaskNameInitialize() in the init section of main
     13           8. Add a call to YourNewTaskNameRunActiveState() in the Super Loop section of main
     14           9. Update yournewtaskname.h per the instructions at the top of yournewtaskname.h
     15          10. Delete this text (between the dashed lines) and update the Description below to describe your task
     16          ----------------------------------------------------------------------------------------------------------------------
     17          
     18          Description:
     19          This is a user_app.c file template 
     20          
     21          ------------------------------------------------------------------------------------------------------------------------
     22          API:
     23          
     24          Public functions:
     25          
     26          
     27          Protected System functions:
     28          void UserAppInitialize(void)
     29          Runs required initialzation for the task.  Should only be called once in main init section.
     30          
     31          void UserAppRunActiveState(void)
     32          Runs current task state.  Should only be called once in main loop.
     33          
     34          
     35          **********************************************************************************************************************/
     36          
     37          #include "configuration.h"

  /**********************************************************************************************************************
                                                                                                                        ^
"F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpg_common\configuration.h",1  Warning[Pa050]: 
          non-native end of line sequence detected (this diagnostic is only
          issued once)
     38          
     39          /***********************************************************************************************************************
     40          Global variable definitions with scope across entire project.
     41          All Global variable names shall start with "G_"
     42          ***********************************************************************************************************************/
     43          /* New variables */

   \                                 In section .bss, align 4
     44          volatile u32 G_u32UserAppFlags;                       /* Global state flags */
   \                     G_u32UserAppFlags:
   \   00000000                      DS8 4
     45          
     46          
     47          /*--------------------------------------------------------------------------------------------------------------------*/
     48          /* Existing variables (defined in other files -- should all contain the "extern" keyword) */
     49          extern volatile u32 G_u32SystemFlags;                  /* From main.c */
     50          extern volatile u32 G_u32ApplicationFlags;             /* From main.c */
     51          
     52          extern volatile u32 G_u32SystemTime1ms;                /* From board-specific source file */
     53          extern volatile u32 G_u32SystemTime1s;                 /* From board-specific source file */
     54          
     55          extern AntSetupDataType G_stAntSetupData;                         /* From ant.c */
     56          
     57          extern u32 G_u32AntApiCurrentDataTimeStamp;                       /* From ant_api.c */
     58          extern AntApplicationMessageType G_eAntApiCurrentMessageClass;    /* From ant_api.c */
     59          extern u8 G_au8AntApiCurrentData[ANT_APPLICATION_MESSAGE_BYTES];  /* From ant_api.c */
     60          
     61          
     62          
     63          /***********************************************************************************************************************
     64          Global variable definitions with scope limited to this local application.
     65          Variable names shall start with "UserApp_" and be declared as static.
     66          ***********************************************************************************************************************/

   \                                 In section .bss, align 4
     67          static fnCode_type UserApp_StateMachine;            /* The state machine function pointer */
   \                     UserApp_StateMachine:
   \   00000000                      DS8 4
     68          static u32 UserApp_u32Timeout;                      /* Timeout counter used across states */

   \                                 In section .bss, align 1
     69          static u8 UserApp_CursorPosition;
   \                     UserApp_CursorPosition:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
     70          static u8 u8TransMessage[8]={0xff,00,16,01,00,0xff,00,00};/*message of signal to control airconditional*/
   \                     u8TransMessage:
   \   00000000   0xFF 0x00          DC8 255, 0, 16, 1, 0, 255, 0, 0
   \              0x10 0x01    
   \              0x00 0xFF    
   \              0x00 0x00    

   \                                 In section .data, align 4
     71          u8 u8on[]="on";
   \                     u8on:
   \   00000000   0x6F 0x6E          DC8 "on"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .data, align 4
     72          u8 u8off[]="off";
   \                     u8off:
   \   00000000   0x6F 0x66          DC8 "off"
   \              0x66 0x00    

   \                                 In section .data, align 1
     73          bool boolcallonce=TRUE;
   \                     boolcallonce:
   \   00000000   0x01               DC8 1

   \                                 In section .data, align 4
     74          u8 u8Funtion1Message[]="switch funtio temper";
   \                     u8Funtion1Message:
   \   00000000   0x73 0x77          DC8 "switch funtio temper"
   \              0x69 0x74    
   \              0x63 0x68    
   \              0x20 0x66    
   \              0x75 0x6E    
   \              0x74 0x69    
   \              0x6F 0x20    
   \              0x74 0x65    
   \              0x6D 0x70    
   \              0x65 0x72    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .data, align 4
     75          u8 u8Funtion2Message[]="wind auto sleep";
   \                     u8Funtion2Message:
   \   00000000   0x77 0x69          DC8 "wind auto sleep"
   \              0x6E 0x64    
   \              0x20 0x61    
   \              0x75 0x74    
   \              0x6F 0x20    
   \              0x73 0x6C    
   \              0x65 0x65    
   \              0x70 0x00    
     76          

   \                                 In section .bss, align 4
     77          static u8 u8envirtemperature[144];
   \                     u8envirtemperature:
   \   00000000                      DS8 144

   \                                 In section .bss, align 4
     78          static u8 u8indoortemperature[144][10];
   \                     u8indoortemperature:
   \   00000000                      DS8 1440

   \                                 In section .bss, align 4
     79          static u32 u32timerlasting;
   \                     u32timerlasting:
   \   00000000                      DS8 4
     80          /**********************************************************************************************************************
     81          Function Definitions
     82          **********************************************************************************************************************/
     83          
     84          /*--------------------------------------------------------------------------------------------------------------------*/
     85          /* Public functions                                                                                                   */
     86          /*--------------------------------------------------------------------------------------------------------------------*/
     87          
     88          
     89          /*--------------------------------------------------------------------------------------------------------------------*/
     90          /* Protected functions                                                                                                */
     91          /*--------------------------------------------------------------------------------------------------------------------*/
     92          
     93          /*--------------------------------------------------------------------------------------------------------------------
     94          Function: UserAppInitialize
     95          
     96          Description:
     97          Initializes the State Machine and its variables.
     98          
     99          Requires:
    100            -
    101          
    102          Promises:
    103            - 
    104          */

   \                                 In section .text, align 2, keep-with-next
    105          void UserAppInitialize(void)
    106          {
   \                     UserAppInitialize: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    107            for(u8 i=0;i<144;i++)
   \   00000002   0x2000             MOVS     R0,#+0
   \                     ??UserAppInitialize_0: (+1)
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0x2890             CMP      R0,#+144
   \   00000008   0xDA0C             BGE.N    ??UserAppInitialize_1
    108            {
    109              u8envirtemperature[i]=i%18+12;
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x2112             MOVS     R1,#+18
   \   0000000E   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000012   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   00000016   0x310C             ADDS     R1,R1,#+12
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable8
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x5481             STRB     R1,[R0, R2]
    110            }
   \   00000020   0x1C40             ADDS     R0,R0,#+1
   \   00000022   0xE7EF             B.N      ??UserAppInitialize_0
    111            /* Configure ANT for this application */
    112            G_stAntSetupData.AntChannel          = ANT_CHANNEL_USERAPP;
   \                     ??UserAppInitialize_1: (+1)
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
    113            G_stAntSetupData.AntSerialLo         = ANT_SERIAL_LO_USERAPP;
   \   0000002C   0x206B             MOVS     R0,#+107
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000032   0x70C8             STRB     R0,[R1, #+3]
    114            G_stAntSetupData.AntSerialHi         = ANT_SERIAL_HI_USERAPP;
   \   00000034   0x2019             MOVS     R0,#+25
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   0000003A   0x7108             STRB     R0,[R1, #+4]
    115            G_stAntSetupData.AntDeviceType       = ANT_DEVICE_TYPE_USERAPP;
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000042   0x7148             STRB     R0,[R1, #+5]
    116            G_stAntSetupData.AntTransmissionType = ANT_TRANSMISSION_TYPE_USERAPP;
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   0000004A   0x7188             STRB     R0,[R1, #+6]
    117            G_stAntSetupData.AntChannelPeriodLo  = ANT_CHANNEL_PERIOD_LO_USERAPP;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000052   0x71C8             STRB     R0,[R1, #+7]
    118            G_stAntSetupData.AntChannelPeriodHi  = ANT_CHANNEL_PERIOD_HI_USERAPP;
   \   00000054   0x2020             MOVS     R0,#+32
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   0000005A   0x7208             STRB     R0,[R1, #+8]
    119            G_stAntSetupData.AntFrequency        = ANT_FREQUENCY_USERAPP;
   \   0000005C   0x2032             MOVS     R0,#+50
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000062   0x7248             STRB     R0,[R1, #+9]
    120            G_stAntSetupData.AntTxPower          = ANT_TX_POWER_USERAPP;
   \   00000064   0x2003             MOVS     R0,#+3
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   0000006A   0x7288             STRB     R0,[R1, #+10]
    121          
    122            LCDCommand(LCD_HOME_CMD);
   \   0000006C   0x2002             MOVS     R0,#+2
   \   0000006E   0x.... 0x....      BL       LCDCommand
    123            LCDCommand(LCD_DISPLAY_CMD | LCD_DISPLAY_ON | LCD_DISPLAY_CURSOR | LCD_DISPLAY_BLINK);
   \   00000072   0x200F             MOVS     R0,#+15
   \   00000074   0x.... 0x....      BL       LCDCommand
    124            UserApp_CursorPosition = LINE1_START_ADDR;
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000007E   0x7008             STRB     R0,[R1, #+0]
    125          
    126            /* If good initialization, set state to Idle */
    127            if( AntChannelConfig(ANT_MASTER) )
   \   00000080   0x2001             MOVS     R0,#+1
   \   00000082   0x.... 0x....      BL       AntChannelConfig
   \   00000086   0x2800             CMP      R0,#+0
   \   00000088   0xD007             BEQ.N    ??UserAppInitialize_2
    128            {
    129              AntOpenChannel();
   \   0000008A   0x.... 0x....      BL       AntOpenChannel
    130              UserApp_StateMachine = UserAppSM_Idle;
   \   0000008E   0x.... 0x....      ADR.W    R0,UserAppSM_Idle
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   00000096   0x6008             STR      R0,[R1, #+0]
   \   00000098   0xE004             B.N      ??UserAppInitialize_3
    131            }
    132            else
    133            {
    134              /* The task isn't properly initialized, so shut it down and don't run */
    135              UserApp_StateMachine = UserAppSM_FailedInit;
   \                     ??UserAppInitialize_2: (+1)
   \   0000009A   0x.... 0x....      ADR.W    R0,UserAppSM_FailedInit
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   000000A2   0x6008             STR      R0,[R1, #+0]
    136            }
    137          
    138          
    139          } /* end UserAppInitialize() */
   \                     ??UserAppInitialize_3: (+1)
   \   000000A4   0xBD01             POP      {R0,PC}          ;; return
    140          
    141          
    142          /*----------------------------------------------------------------------------------------------------------------------
    143          Function UserAppRunActiveState()
    144          
    145          Description:
    146          Selects and runs one iteration of the current state in the state machine.
    147          All state machines have a TOTAL of 1ms to execute, so on average n state machines
    148          may take 1ms / n to execute.
    149          
    150          Requires:
    151            - State machine function pointer points at current state
    152          
    153          Promises:
    154            - Calls the function to pointed by the state machine function pointer
    155          */

   \                                 In section .text, align 2, keep-with-next
    156          void UserAppRunActiveState(void)
    157          {
   \                     UserAppRunActiveState: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    158            UserApp_StateMachine();
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable8_3
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x4780             BLX      R0
    159          
    160          } /* end UserAppRunActiveState */
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    161          
    162          
    163          /*--------------------------------------------------------------------------------------------------------------------*/
    164          /* Private functions                                                                                                  */
    165          /*--------------------------------------------------------------------------------------------------------------------*/
    166          
    167          
    168          /**********************************************************************************************************************
    169          State Machine Function Definitions
    170          **********************************************************************************************************************/
    171          
    172          /*-------------------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    173          static void UserAppSM_Idle(void)
    174          {
   \                     UserAppSM_Idle: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    175            //---------------------------------
    176            //u8envirtemperature[u8tencounter]    now environemnt temperature
    177           
    178              static u16 u16oneminute=6000;
    179              static u8 u8tentimes=0;
    180              static u8 u8tencounter=0,u8onecounter=0;
    181              static u8 u8nowindoor=12;
    182              static u8 u8stringtab[]="\t";
    183               
    184              u16oneminute--;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   00000006   0x8800             LDRH     R0,[R0, #+0]
   \   00000008   0x1E40             SUBS     R0,R0,#+1
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable8_4
   \   0000000E   0x8008             STRH     R0,[R1, #+0]
    185             if(u8TransMessage[0]==0x00)
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xF040 0x8090      BNE.W    ??UserAppSM_Idle_0
    186             {
    187              
    188              if(u16oneminute==0)
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   00000020   0x8800             LDRH     R0,[R0, #+0]
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xF040 0x80E9      BNE.W    ??UserAppSM_Idle_1
    189              {
    190                u32timerlasting--;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable8_6
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x1E40             SUBS     R0,R0,#+1
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable8_6
   \   00000034   0x6008             STR      R0,[R1, #+0]
    191              if(u32timerlasting==0)
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable8_6
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD107             BNE.N    ??UserAppSM_Idle_2
    192              {
    193                u8TransMessage[0]=0xff;
   \   00000040   0x20FF             MOVS     R0,#+255
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   00000046   0x7008             STRB     R0,[R1, #+0]
    194                u8TransMessage[4]=0x00;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   0000004E   0x7108             STRB     R0,[R1, #+4]
    195              }
    196                u8onecounter++;      
   \                     ??UserAppSM_Idle_2: (+1)
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable8_7
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
    197                if(u8onecounter==5||u8onecounter==10)
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   00000062   0x7800             LDRB     R0,[R0, #+0]
   \   00000064   0x2805             CMP      R0,#+5
   \   00000066   0xD004             BEQ.N    ??UserAppSM_Idle_3
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   0000006C   0x7800             LDRB     R0,[R0, #+0]
   \   0000006E   0x280A             CMP      R0,#+10
   \   00000070   0xD12E             BNE.N    ??UserAppSM_Idle_4
    198                {
    199                  if(u8TransMessage[2]>u8nowindoor)
   \                     ??UserAppSM_Idle_3: (+1)
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   00000076   0x7800             LDRB     R0,[R0, #+0]
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   0000007C   0x7889             LDRB     R1,[R1, #+2]
   \   0000007E   0x4288             CMP      R0,R1
   \   00000080   0xD207             BCS.N    ??UserAppSM_Idle_5
    200                  {
    201                    u8nowindoor++;
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   00000086   0x7800             LDRB     R0,[R0, #+0]
   \   00000088   0x1C40             ADDS     R0,R0,#+1
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
   \   00000090   0xE00E             B.N      ??UserAppSM_Idle_6
    202                  }
    203                  else if(u8TransMessage[2]<u8nowindoor)
   \                     ??UserAppSM_Idle_5: (+1)
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   00000096   0x7880             LDRB     R0,[R0, #+2]
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   0000009C   0x7809             LDRB     R1,[R1, #+0]
   \   0000009E   0x4288             CMP      R0,R1
   \   000000A0   0xD206             BCS.N    ??UserAppSM_Idle_6
    204                  {
    205                    u8nowindoor--;
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x1E40             SUBS     R0,R0,#+1
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   000000AE   0x7008             STRB     R0,[R1, #+0]
    206                  }
    207                  if(u8onecounter==10)
   \                     ??UserAppSM_Idle_6: (+1)
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   000000B4   0x7800             LDRB     R0,[R0, #+0]
   \   000000B6   0x280A             CMP      R0,#+10
   \   000000B8   0xD10A             BNE.N    ??UserAppSM_Idle_4
    208                  {
    209                    u8tencounter++;
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000000BE   0x7800             LDRB     R0,[R0, #+0]
   \   000000C0   0x1C40             ADDS     R0,R0,#+1
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   000000C6   0x7008             STRB     R0,[R1, #+0]
    210                    u8onecounter=0;
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable8_7
   \   000000CE   0x7008             STRB     R0,[R1, #+0]
    211                  }
    212                }
    213                u8indoortemperature[u8tencounter][u8tencounter]=u8nowindoor;
   \                     ??UserAppSM_Idle_4: (+1)
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   000000D8   0x7809             LDRB     R1,[R1, #+0]
   \   000000DA   0x220A             MOVS     R2,#+10
   \   000000DC   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000000E0   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   000000E4   0x7809             LDRB     R1,[R1, #+0]
   \   000000E6   0x.... 0x....      LDR.W    R2,??DataTable8_8
   \   000000EA   0x7812             LDRB     R2,[R2, #+0]
   \   000000EC   0x540A             STRB     R2,[R1, R0]
    214                u16oneminute=6000;
   \   000000EE   0xF241 0x7070      MOVW     R0,#+6000
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable8_4
   \   000000F6   0x8008             STRH     R0,[R1, #+0]
    215                DebugPrintNumber((u32)u8nowindoor);
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   000000FC   0x7800             LDRB     R0,[R0, #+0]
   \   000000FE   0x.... 0x....      BL       DebugPrintNumber
    216                DebugPrintf(u8stringtab);
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   00000106   0x.... 0x....      BL       DebugPrintf
    217                if(u8TransMessage[0]=0x00)
                          ^
Warning[Pe187]: use of "=" where "==" may have been intended

      static u8 u8tentimes=0;
                ^
"F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpg_common\application\user_app.c",179  Warning[Pe177]: 
          variable "u8tentimes" was declared but never referenced
   \   0000010A   0x2000             MOVS     R0,#+0
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   00000110   0x7008             STRB     R0,[R1, #+0]
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   00000116   0x7800             LDRB     R0,[R0, #+0]
   \   00000118   0x2800             CMP      R0,#+0
   \   0000011A   0xD008             BEQ.N    ??UserAppSM_Idle_7
    218                {
    219                DebugPrintNumber((u32)u8envirtemperature[u8tencounter]);
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000120   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   00000124   0x7809             LDRB     R1,[R1, #+0]
   \   00000126   0x5C08             LDRB     R0,[R1, R0]
   \   00000128   0x.... 0x....      BL       DebugPrintNumber
   \   0000012C   0xE003             B.N      ??UserAppSM_Idle_8
    220                }
    221                else
    222                {
    223                  DebugPrintf(u8off);
   \                     ??UserAppSM_Idle_7: (+1)
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000132   0x.... 0x....      BL       DebugPrintf
    224                }
    225                DebugLineFeed();
   \                     ??UserAppSM_Idle_8: (+1)
   \   00000136   0x.... 0x....      BL       DebugLineFeed
   \   0000013A   0xE05E             B.N      ??UserAppSM_Idle_1
    226              }
    227             }
    228             else 
    229             {
    230               if(u16oneminute==0)
   \                     ??UserAppSM_Idle_0: (+1)
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   00000140   0x8800             LDRH     R0,[R0, #+0]
   \   00000142   0x2800             CMP      R0,#+0
   \   00000144   0xD159             BNE.N    ??UserAppSM_Idle_1
    231              {
    232                u8onecounter++;      
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   0000014A   0x7800             LDRB     R0,[R0, #+0]
   \   0000014C   0x1C40             ADDS     R0,R0,#+1
   \   0000014E   0x.... 0x....      LDR.W    R1,??DataTable8_7
   \   00000152   0x7008             STRB     R0,[R1, #+0]
    233                if(u8onecounter==5||u8onecounter==10)
   \   00000154   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   00000158   0x7800             LDRB     R0,[R0, #+0]
   \   0000015A   0x2805             CMP      R0,#+5
   \   0000015C   0xD004             BEQ.N    ??UserAppSM_Idle_9
   \   0000015E   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   00000162   0x7800             LDRB     R0,[R0, #+0]
   \   00000164   0x280A             CMP      R0,#+10
   \   00000166   0xD134             BNE.N    ??UserAppSM_Idle_10
    234                {
    235                  if(u8envirtemperature[u8tencounter]>u8nowindoor)
   \                     ??UserAppSM_Idle_9: (+1)
   \   00000168   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   0000016C   0x7800             LDRB     R0,[R0, #+0]
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000172   0x.... 0x....      LDR.W    R2,??DataTable8_9
   \   00000176   0x7812             LDRB     R2,[R2, #+0]
   \   00000178   0x5C51             LDRB     R1,[R2, R1]
   \   0000017A   0x4288             CMP      R0,R1
   \   0000017C   0xD207             BCS.N    ??UserAppSM_Idle_11
    236                  {
    237                    u8nowindoor++;
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   00000182   0x7800             LDRB     R0,[R0, #+0]
   \   00000184   0x1C40             ADDS     R0,R0,#+1
   \   00000186   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   0000018A   0x7008             STRB     R0,[R1, #+0]
   \   0000018C   0xE011             B.N      ??UserAppSM_Idle_12
    238                  }
    239                  else if(u8envirtemperature[u8tencounter]<u8nowindoor)
   \                     ??UserAppSM_Idle_11: (+1)
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000192   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   00000196   0x7809             LDRB     R1,[R1, #+0]
   \   00000198   0x5C08             LDRB     R0,[R1, R0]
   \   0000019A   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   0000019E   0x7809             LDRB     R1,[R1, #+0]
   \   000001A0   0x4288             CMP      R0,R1
   \   000001A2   0xD206             BCS.N    ??UserAppSM_Idle_12
    240                  {
    241                    u8nowindoor--;
   \   000001A4   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   000001A8   0x7800             LDRB     R0,[R0, #+0]
   \   000001AA   0x1E40             SUBS     R0,R0,#+1
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   000001B0   0x7008             STRB     R0,[R1, #+0]
    242                  }
    243                  if(u8onecounter==10)
   \                     ??UserAppSM_Idle_12: (+1)
   \   000001B2   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   000001B6   0x7800             LDRB     R0,[R0, #+0]
   \   000001B8   0x280A             CMP      R0,#+10
   \   000001BA   0xD10A             BNE.N    ??UserAppSM_Idle_10
    244                  {
    245                    u8tencounter++;
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000001C0   0x7800             LDRB     R0,[R0, #+0]
   \   000001C2   0x1C40             ADDS     R0,R0,#+1
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   000001C8   0x7008             STRB     R0,[R1, #+0]
    246                    u8onecounter=0;
   \   000001CA   0x2000             MOVS     R0,#+0
   \   000001CC   0x.... 0x....      LDR.W    R1,??DataTable8_7
   \   000001D0   0x7008             STRB     R0,[R1, #+0]
    247                  }
    248                }
    249                u8indoortemperature[u8tencounter][u8tencounter]=u8nowindoor;
   \                     ??UserAppSM_Idle_10: (+1)
   \   000001D2   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   000001D6   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   000001DA   0x7809             LDRB     R1,[R1, #+0]
   \   000001DC   0x220A             MOVS     R2,#+10
   \   000001DE   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000001E2   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   000001E6   0x7809             LDRB     R1,[R1, #+0]
   \   000001E8   0x.... 0x....      LDR.W    R2,??DataTable8_8
   \   000001EC   0x7812             LDRB     R2,[R2, #+0]
   \   000001EE   0x540A             STRB     R2,[R1, R0]
    250                u16oneminute=6000;
   \   000001F0   0xF241 0x7070      MOVW     R0,#+6000
   \   000001F4   0x.... 0x....      LDR.W    R1,??DataTable8_4
   \   000001F8   0x8008             STRH     R0,[R1, #+0]
    251              }
    252             }
    253            
    254            
    255             
    256             
    257            //idle state initialization 
    258            while(boolcallonce)
   \                     ??UserAppSM_Idle_1: (+1)
   \   000001FA   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   000001FE   0x7800             LDRB     R0,[R0, #+0]
   \   00000200   0x2800             CMP      R0,#+0
   \   00000202   0xD028             BEQ.N    ??UserAppSM_Idle_13
    259            {
    260             UserApp_CursorPosition = LINE1_START_ADDR; 
   \   00000204   0x2000             MOVS     R0,#+0
   \   00000206   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000020A   0x7008             STRB     R0,[R1, #+0]
    261             LCDCommand(LCD_CLEAR_CMD);
   \   0000020C   0x2001             MOVS     R0,#+1
   \   0000020E   0x.... 0x....      BL       LCDCommand
    262             LCDMessage(LINE1_START_ADDR,u8Funtion1Message);
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable8_14
   \   00000216   0x2000             MOVS     R0,#+0
   \   00000218   0x.... 0x....      BL       LCDMessage
    263             LCDMessage(LINE2_START_ADDR,u8Funtion2Message);
   \   0000021C   0x.... 0x....      LDR.W    R1,??DataTable8_15
   \   00000220   0x2040             MOVS     R0,#+64
   \   00000222   0x.... 0x....      BL       LCDMessage
    264             if(u8TransMessage[0]==0xff)
   \   00000226   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   0000022A   0x7800             LDRB     R0,[R0, #+0]
   \   0000022C   0x28FF             CMP      R0,#+255
   \   0000022E   0xD105             BNE.N    ??UserAppSM_Idle_14
    265             {
    266               LCDMessage(LINE2_START_ADDR+16,u8off);
   \   00000230   0x.... 0x....      LDR.W    R1,??DataTable8_12
   \   00000234   0x2050             MOVS     R0,#+80
   \   00000236   0x.... 0x....      BL       LCDMessage
   \   0000023A   0xE004             B.N      ??UserAppSM_Idle_15
    267             }
    268             else
    269             {
    270              LCDMessage(LINE2_START_ADDR+16,u8on);
   \                     ??UserAppSM_Idle_14: (+1)
   \   0000023C   0x.... 0x....      LDR.W    R1,??DataTable8_16
   \   00000240   0x2050             MOVS     R0,#+80
   \   00000242   0x.... 0x....      BL       LCDMessage
    271             }
    272            LCDCommand(LCD_HOME_CMD);
   \                     ??UserAppSM_Idle_15: (+1)
   \   00000246   0x2002             MOVS     R0,#+2
   \   00000248   0x.... 0x....      BL       LCDCommand
    273            boolcallonce=FALSE;
   \   0000024C   0x2000             MOVS     R0,#+0
   \   0000024E   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   00000252   0x7008             STRB     R0,[R1, #+0]
   \   00000254   0xE7D1             B.N      ??UserAppSM_Idle_1
    274            }
    275            //button 1  move cursor forward ------------------------------------------
    276            if(WasButtonPressed(BUTTON1))
   \                     ??UserAppSM_Idle_13: (+1)
   \   00000256   0x2001             MOVS     R0,#+1
   \   00000258   0x.... 0x....      BL       WasButtonPressed
   \   0000025C   0x2800             CMP      R0,#+0
   \   0000025E   0xD032             BEQ.N    ??UserAppSM_Idle_16
    277            {
    278              ButtonAcknowledge(BUTTON1);
   \   00000260   0x2001             MOVS     R0,#+1
   \   00000262   0x.... 0x....      BL       ButtonAcknowledge
    279              
    280              /* Handle the two special cases or just the regular case */
    281              if(UserApp_CursorPosition == (LINE1_END_ADDR-5))
   \   00000266   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000026A   0x7800             LDRB     R0,[R0, #+0]
   \   0000026C   0x280E             CMP      R0,#+14
   \   0000026E   0xD104             BNE.N    ??UserAppSM_Idle_17
    282              {
    283                UserApp_CursorPosition = LINE2_START_ADDR;
   \   00000270   0x2040             MOVS     R0,#+64
   \   00000272   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   00000276   0x7008             STRB     R0,[R1, #+0]
   \   00000278   0xE01D             B.N      ??UserAppSM_Idle_18
    284              }
    285          
    286              else if (UserApp_CursorPosition == (LINE2_END_ADDR-9))
   \                     ??UserAppSM_Idle_17: (+1)
   \   0000027A   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000027E   0x7800             LDRB     R0,[R0, #+0]
   \   00000280   0x284A             CMP      R0,#+74
   \   00000282   0xD104             BNE.N    ??UserAppSM_Idle_19
    287              {
    288                UserApp_CursorPosition = LINE1_START_ADDR;
   \   00000284   0x2000             MOVS     R0,#+0
   \   00000286   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000028A   0x7008             STRB     R0,[R1, #+0]
   \   0000028C   0xE013             B.N      ??UserAppSM_Idle_18
    289              }
    290              
    291              /* Otherwise just increment  */
    292              else
    293              {
    294                if(UserApp_CursorPosition>=0x40)
   \                     ??UserAppSM_Idle_19: (+1)
   \   0000028E   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000292   0x7800             LDRB     R0,[R0, #+0]
   \   00000294   0x2840             CMP      R0,#+64
   \   00000296   0xDB07             BLT.N    ??UserAppSM_Idle_20
    295                {
    296                  UserApp_CursorPosition+=5;
   \   00000298   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000029C   0x7800             LDRB     R0,[R0, #+0]
   \   0000029E   0x1D40             ADDS     R0,R0,#+5
   \   000002A0   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   000002A4   0x7008             STRB     R0,[R1, #+0]
   \   000002A6   0xE006             B.N      ??UserAppSM_Idle_18
    297                }
    298                else
    299                {
    300                  UserApp_CursorPosition+=7;
   \                     ??UserAppSM_Idle_20: (+1)
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000002AC   0x7800             LDRB     R0,[R0, #+0]
   \   000002AE   0x1DC0             ADDS     R0,R0,#+7
   \   000002B0   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   000002B4   0x7008             STRB     R0,[R1, #+0]
    301                }
    302              }
    303               LCDCommand(LCD_ADDRESS_CMD | UserApp_CursorPosition);
   \                     ??UserAppSM_Idle_18: (+1)
   \   000002B6   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000002BA   0x7800             LDRB     R0,[R0, #+0]
   \   000002BC   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   000002C0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002C2   0x.... 0x....      BL       LCDCommand
    304            }
    305              //button 0 move cursor left ---------------------------------------------
    306              if(WasButtonPressed(BUTTON0))
   \                     ??UserAppSM_Idle_16: (+1)
   \   000002C6   0x2000             MOVS     R0,#+0
   \   000002C8   0x.... 0x....      BL       WasButtonPressed
   \   000002CC   0x2800             CMP      R0,#+0
   \   000002CE   0xD032             BEQ.N    ??UserAppSM_Idle_21
    307            {
    308              ButtonAcknowledge(BUTTON0);
   \   000002D0   0x2000             MOVS     R0,#+0
   \   000002D2   0x.... 0x....      BL       ButtonAcknowledge
    309              
    310              /* Handle the two special cases or just the regular case */
    311              if(UserApp_CursorPosition == LINE1_START_ADDR)
   \   000002D6   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000002DA   0x7800             LDRB     R0,[R0, #+0]
   \   000002DC   0x2800             CMP      R0,#+0
   \   000002DE   0xD104             BNE.N    ??UserAppSM_Idle_22
    312              {
    313                UserApp_CursorPosition = LINE2_END_ADDR-9;
   \   000002E0   0x204A             MOVS     R0,#+74
   \   000002E2   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   000002E6   0x7008             STRB     R0,[R1, #+0]
   \   000002E8   0xE01D             B.N      ??UserAppSM_Idle_23
    314              }
    315          
    316              else if (UserApp_CursorPosition == LINE2_START_ADDR)
   \                     ??UserAppSM_Idle_22: (+1)
   \   000002EA   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000002EE   0x7800             LDRB     R0,[R0, #+0]
   \   000002F0   0x2840             CMP      R0,#+64
   \   000002F2   0xD104             BNE.N    ??UserAppSM_Idle_24
    317              {
    318                UserApp_CursorPosition = LINE1_END_ADDR-5;
   \   000002F4   0x200E             MOVS     R0,#+14
   \   000002F6   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   000002FA   0x7008             STRB     R0,[R1, #+0]
   \   000002FC   0xE013             B.N      ??UserAppSM_Idle_23
    319              }
    320              
    321              /*cursor move*/
    322              else
    323              {
    324                if(UserApp_CursorPosition>=0x40)
   \                     ??UserAppSM_Idle_24: (+1)
   \   000002FE   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000302   0x7800             LDRB     R0,[R0, #+0]
   \   00000304   0x2840             CMP      R0,#+64
   \   00000306   0xDB07             BLT.N    ??UserAppSM_Idle_25
    325                {
    326                  UserApp_CursorPosition-=5;
   \   00000308   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000030C   0x7800             LDRB     R0,[R0, #+0]
   \   0000030E   0x1F40             SUBS     R0,R0,#+5
   \   00000310   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   00000314   0x7008             STRB     R0,[R1, #+0]
   \   00000316   0xE006             B.N      ??UserAppSM_Idle_23
    327                }
    328                else
    329                {
    330                UserApp_CursorPosition-=7;
   \                     ??UserAppSM_Idle_25: (+1)
   \   00000318   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000031C   0x7800             LDRB     R0,[R0, #+0]
   \   0000031E   0x1FC0             SUBS     R0,R0,#+7
   \   00000320   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   00000324   0x7008             STRB     R0,[R1, #+0]
    331                }
    332              }
    333               LCDCommand(LCD_ADDRESS_CMD | UserApp_CursorPosition);
   \                     ??UserAppSM_Idle_23: (+1)
   \   00000326   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000032A   0x7800             LDRB     R0,[R0, #+0]
   \   0000032C   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000330   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000332   0x.... 0x....      BL       LCDCommand
    334            }
    335            /*button2 confirm the selection*/
    336            if(WasButtonPressed(BUTTON2))
   \                     ??UserAppSM_Idle_21: (+1)
   \   00000336   0x2002             MOVS     R0,#+2
   \   00000338   0x.... 0x....      BL       WasButtonPressed
   \   0000033C   0x2800             CMP      R0,#+0
   \   0000033E   0xD05D             BEQ.N    ??UserAppSM_Idle_26
    337            {
    338              ButtonAcknowledge(BUTTON2);
   \   00000340   0x2002             MOVS     R0,#+2
   \   00000342   0x.... 0x....      BL       ButtonAcknowledge
    339              { 
    340                /*enter different modules*/
    341                switch(UserApp_CursorPosition)
   \   00000346   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000034A   0x7800             LDRB     R0,[R0, #+0]
   \   0000034C   0x2800             CMP      R0,#+0
   \   0000034E   0xD00A             BEQ.N    ??UserAppSM_Idle_27
   \   00000350   0x2807             CMP      R0,#+7
   \   00000352   0xD012             BEQ.N    ??UserAppSM_Idle_28
   \   00000354   0x280E             CMP      R0,#+14
   \   00000356   0xD01A             BEQ.N    ??UserAppSM_Idle_29
   \   00000358   0x2840             CMP      R0,#+64
   \   0000035A   0xD022             BEQ.N    ??UserAppSM_Idle_30
   \   0000035C   0x2845             CMP      R0,#+69
   \   0000035E   0xD02A             BEQ.N    ??UserAppSM_Idle_31
   \   00000360   0x284A             CMP      R0,#+74
   \   00000362   0xD032             BEQ.N    ??UserAppSM_Idle_32
   \   00000364   0xE03B             B.N      ??UserAppSM_Idle_33
    342                {
    343                  case 0x00:
    344                    boolcallonce=TRUE;
   \                     ??UserAppSM_Idle_27: (+1)
   \   00000366   0x2001             MOVS     R0,#+1
   \   00000368   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   0000036C   0x7008             STRB     R0,[R1, #+0]
    345                    UserApp_StateMachine = UserAppSM_SwitchSelect;         
   \   0000036E   0x.... 0x....      ADR.W    R0,UserAppSM_SwitchSelect
   \   00000372   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   00000376   0x6008             STR      R0,[R1, #+0]
    346                  break;
   \   00000378   0xE040             B.N      ??UserAppSM_Idle_26
    347                  case 0x07:
    348                    boolcallonce=TRUE;
   \                     ??UserAppSM_Idle_28: (+1)
   \   0000037A   0x2001             MOVS     R0,#+1
   \   0000037C   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   00000380   0x7008             STRB     R0,[R1, #+0]
    349                    UserApp_StateMachine = UserAppSM_FuntionSelect;          
   \   00000382   0x.... 0x....      ADR.W    R0,UserAppSM_FuntionSelect
   \   00000386   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   0000038A   0x6008             STR      R0,[R1, #+0]
    350                  break;
   \   0000038C   0xE036             B.N      ??UserAppSM_Idle_26
    351                  case 0x0e:
    352                    boolcallonce=TRUE;
   \                     ??UserAppSM_Idle_29: (+1)
   \   0000038E   0x2001             MOVS     R0,#+1
   \   00000390   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   00000394   0x7008             STRB     R0,[R1, #+0]
    353                    UserApp_StateMachine = UserAppSM_TemperSelect;        
   \   00000396   0x.... 0x....      ADR.W    R0,UserAppSM_TemperSelect
   \   0000039A   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   0000039E   0x6008             STR      R0,[R1, #+0]
    354                  break;
   \   000003A0   0xE02C             B.N      ??UserAppSM_Idle_26
    355                  case 0x40:
    356                    boolcallonce=TRUE;
   \                     ??UserAppSM_Idle_30: (+1)
   \   000003A2   0x2001             MOVS     R0,#+1
   \   000003A4   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   000003A8   0x7008             STRB     R0,[R1, #+0]
    357                    UserApp_StateMachine = UserAppSM_WindSelect;         
   \   000003AA   0x.... 0x....      ADR.W    R0,UserAppSM_WindSelect
   \   000003AE   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   000003B2   0x6008             STR      R0,[R1, #+0]
    358                  break;
   \   000003B4   0xE022             B.N      ??UserAppSM_Idle_26
    359                  case 0x45:
    360                    boolcallonce=TRUE;
   \                     ??UserAppSM_Idle_31: (+1)
   \   000003B6   0x2001             MOVS     R0,#+1
   \   000003B8   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   000003BC   0x7008             STRB     R0,[R1, #+0]
    361                    UserApp_StateMachine = UserAppSM_AutoSelect;       
   \   000003BE   0x.... 0x....      ADR.W    R0,UserAppSM_AutoSelect
   \   000003C2   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   000003C6   0x6008             STR      R0,[R1, #+0]
    362                  break;
   \   000003C8   0xE018             B.N      ??UserAppSM_Idle_26
    363                  case 0x4a:
    364                    boolcallonce=TRUE;
   \                     ??UserAppSM_Idle_32: (+1)
   \   000003CA   0x2001             MOVS     R0,#+1
   \   000003CC   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   000003D0   0x7008             STRB     R0,[R1, #+0]
    365                    UserApp_StateMachine = UserAppSM_SleepSelect;
   \   000003D2   0x.... 0x....      ADR.W    R0,UserAppSM_SleepSelect
   \   000003D6   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   000003DA   0x6008             STR      R0,[R1, #+0]
    366                  break;
   \   000003DC   0xE00E             B.N      ??UserAppSM_Idle_26
    367                 default:
    368                   LCDCommand(LCD_CLEAR_CMD);
   \                     ??UserAppSM_Idle_33: (+1)
   \   000003DE   0x2001             MOVS     R0,#+1
   \   000003E0   0x.... 0x....      BL       LCDCommand
    369                   LCDCommand(LCD_ADDRESS_CMD | UserApp_CursorPosition);
   \   000003E4   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000003E8   0x7800             LDRB     R0,[R0, #+0]
   \   000003EA   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   000003EE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003F0   0x.... 0x....      BL       LCDCommand
    370                   UserApp_CursorPosition = LINE1_START_ADDR;
   \   000003F4   0x2000             MOVS     R0,#+0
   \   000003F6   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   000003FA   0x7008             STRB     R0,[R1, #+0]
    371                }
    372              }
    373            }
    374            /*transmit message to slave*/
    375            if( AntReadData() )
   \                     ??UserAppSM_Idle_26: (+1)
   \   000003FC   0x.... 0x....      BL       AntReadData
   \   00000400   0x2800             CMP      R0,#+0
   \   00000402   0xD017             BEQ.N    ??UserAppSM_Idle_34
    376            {
    377               /* New data message: check what it is */
    378              if(G_eAntApiCurrentMessageClass == ANT_DATA)
   \   00000404   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   00000408   0x7800             LDRB     R0,[R0, #+0]
   \   0000040A   0x2801             CMP      R0,#+1
   \   0000040C   0xD109             BNE.N    ??UserAppSM_Idle_35
    379              {
    380                if(G_au8AntApiCurrentData[4]==0x00)
   \   0000040E   0x.... 0x....      LDR.W    R0,??DataTable8_18
   \   00000412   0x7900             LDRB     R0,[R0, #+4]
   \   00000414   0x2800             CMP      R0,#+0
   \   00000416   0xD10D             BNE.N    ??UserAppSM_Idle_34
    381                {
    382                  u8TransMessage[0]=0xff;
   \   00000418   0x20FF             MOVS     R0,#+255
   \   0000041A   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   0000041E   0x7008             STRB     R0,[R1, #+0]
   \   00000420   0xE008             B.N      ??UserAppSM_Idle_34
    383                }
    384              }
    385              else if(G_eAntApiCurrentMessageClass == ANT_TICK)
   \                     ??UserAppSM_Idle_35: (+1)
   \   00000422   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   00000426   0x7800             LDRB     R0,[R0, #+0]
   \   00000428   0x2802             CMP      R0,#+2
   \   0000042A   0xD103             BNE.N    ??UserAppSM_Idle_34
    386              {
    387               /* A channel period has gone by: typically this is when new data should be queued to be sent */
    388                AntQueueBroadcastMessage(u8TransMessage);
   \   0000042C   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   00000430   0x.... 0x....      BL       AntQueueBroadcastMessage
    389              }
    390            } /* end AntReadData() */
    391          
    392          } /* end UserAppSM_Idle() */
   \                     ??UserAppSM_Idle_34: (+1)
   \   00000434   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .data, align 2
   \                     ??u16oneminute:
   \   00000000   0x1770             DC16 6000

   \                                 In section .bss, align 1
   \                     ??u8tencounter:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??u8onecounter:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
   \                     ??u8nowindoor:
   \   00000000   0x0C               DC8 12

   \                                 In section .data, align 2
   \                     ??u8stringtab:
   \   00000000   0x09 0x00          DC8 "\t"
    393          
    394          /*  switch moudle---------------------------------------*/
    395          /*----------------------------------------------------- */    

   \                                 In section .text, align 4, keep-with-next
    396          static void UserAppSM_SwitchSelect(void)
    397          {
    398            
    399            u8TransMessage[0]=~u8TransMessage[0];
   \                     UserAppSM_SwitchSelect: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x43C0             MVNS     R0,R0
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    400            boolcallonce=TRUE;
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   00000014   0x7008             STRB     R0,[R1, #+0]
    401            UserApp_StateMachine = UserAppSM_Idle;
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable8_19
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    402            
    403          }
   \   00000020   0x4770             BX       LR               ;; return
    404          
    405          /*funtion select moudle---------------------------------*/
    406          /*------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    407          static void UserAppSM_FuntionSelect(void)
    408          {
   \                     UserAppSM_FuntionSelect: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    409            static u8 u8Funtion1SubMenu[]="cool heat comf ";
    410            static u8 u8Funtion2SubMenu[]="arefaction aeration";
    411            /*moudle initialize*/
    412            while(boolcallonce)
   \                     ??UserAppSM_FuntionSelect_0: (+1)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD018             BEQ.N    ??UserAppSM_FuntionSelect_1
    413            {
    414              LCDCommand(LCD_CLEAR_CMD);
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x.... 0x....      BL       LCDCommand
    415              LCDMessage(LINE1_START_ADDR,u8Funtion1SubMenu);
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable8_20
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      BL       LCDMessage
    416              LCDMessage(LINE2_START_ADDR,u8Funtion2SubMenu);
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable8_21
   \   00000020   0x2040             MOVS     R0,#+64
   \   00000022   0x.... 0x....      BL       LCDMessage
    417              boolcallonce=FALSE;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   0000002C   0x7008             STRB     R0,[R1, #+0]
    418              LCDCommand(LCD_HOME_CMD);  
   \   0000002E   0x2002             MOVS     R0,#+2
   \   00000030   0x.... 0x....      BL       LCDCommand
    419              UserApp_CursorPosition=0x00;
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000003A   0x7008             STRB     R0,[R1, #+0]
   \   0000003C   0xE7E1             B.N      ??UserAppSM_FuntionSelect_0
    420            }
    421            /*move cursor to select different funtions---------------------
    422            and button1 moves cursor to right button2 moves cursor to left*/
    423            if(WasButtonPressed(BUTTON1))
   \                     ??UserAppSM_FuntionSelect_1: (+1)
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0x.... 0x....      BL       WasButtonPressed
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD032             BEQ.N    ??UserAppSM_FuntionSelect_2
    424            {
    425              ButtonAcknowledge(BUTTON1);
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x.... 0x....      BL       ButtonAcknowledge
    426              
    427              /* Handle the two special cases or just the regular case */
    428              if(UserApp_CursorPosition == (LINE1_END_ADDR-9))
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000052   0x7800             LDRB     R0,[R0, #+0]
   \   00000054   0x280A             CMP      R0,#+10
   \   00000056   0xD104             BNE.N    ??UserAppSM_FuntionSelect_3
    429              {
    430                UserApp_CursorPosition = LINE2_START_ADDR;
   \   00000058   0x2040             MOVS     R0,#+64
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000005E   0x7008             STRB     R0,[R1, #+0]
   \   00000060   0xE01D             B.N      ??UserAppSM_FuntionSelect_4
    431              }
    432          
    433              else if (UserApp_CursorPosition == (LINE2_END_ADDR-8))
   \                     ??UserAppSM_FuntionSelect_3: (+1)
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000066   0x7800             LDRB     R0,[R0, #+0]
   \   00000068   0x284B             CMP      R0,#+75
   \   0000006A   0xD104             BNE.N    ??UserAppSM_FuntionSelect_5
    434              {
    435                UserApp_CursorPosition = LINE1_START_ADDR;
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   00000072   0x7008             STRB     R0,[R1, #+0]
   \   00000074   0xE013             B.N      ??UserAppSM_FuntionSelect_4
    436              }
    437              
    438              /* Otherwise just increment one space */
    439              /*the length of cursor moved decided by dinfferent strings*/
    440              else
    441              {
    442                //the cursor is in the second line
    443                if(UserApp_CursorPosition>=0x40)
   \                     ??UserAppSM_FuntionSelect_5: (+1)
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0x2840             CMP      R0,#+64
   \   0000007E   0xDB07             BLT.N    ??UserAppSM_FuntionSelect_6
    444                {
    445                  UserApp_CursorPosition+=11;
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x300B             ADDS     R0,R0,#+11
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
   \   0000008E   0xE006             B.N      ??UserAppSM_FuntionSelect_4
    446                }
    447                //the cursor is in first line
    448                else
    449                {
    450                UserApp_CursorPosition+=5;
   \                     ??UserAppSM_FuntionSelect_6: (+1)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000094   0x7800             LDRB     R0,[R0, #+0]
   \   00000096   0x1D40             ADDS     R0,R0,#+5
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000009C   0x7008             STRB     R0,[R1, #+0]
    451                }
    452              }
    453               LCDCommand(LCD_ADDRESS_CMD | UserApp_CursorPosition);
   \                     ??UserAppSM_FuntionSelect_4: (+1)
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000000A2   0x7800             LDRB     R0,[R0, #+0]
   \   000000A4   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   000000A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AA   0x.... 0x....      BL       LCDCommand
    454            }
    455              //button 0 move cursor left ---------------------------------------------
    456              if(WasButtonPressed(BUTTON0))
   \                     ??UserAppSM_FuntionSelect_2: (+1)
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x.... 0x....      BL       WasButtonPressed
   \   000000B4   0x2800             CMP      R0,#+0
   \   000000B6   0xD032             BEQ.N    ??UserAppSM_FuntionSelect_7
    457            {
    458              ButtonAcknowledge(BUTTON0);
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      BL       ButtonAcknowledge
    459              
    460              /* Handle the two special cases or just the regular case */
    461              if(UserApp_CursorPosition == LINE1_START_ADDR)
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000000C2   0x7800             LDRB     R0,[R0, #+0]
   \   000000C4   0x2800             CMP      R0,#+0
   \   000000C6   0xD104             BNE.N    ??UserAppSM_FuntionSelect_8
    462              {
    463                UserApp_CursorPosition = LINE2_END_ADDR-8;
   \   000000C8   0x204B             MOVS     R0,#+75
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   000000CE   0x7008             STRB     R0,[R1, #+0]
   \   000000D0   0xE01D             B.N      ??UserAppSM_FuntionSelect_9
    464              }
    465          
    466              else if (UserApp_CursorPosition == LINE2_START_ADDR)
   \                     ??UserAppSM_FuntionSelect_8: (+1)
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000000D6   0x7800             LDRB     R0,[R0, #+0]
   \   000000D8   0x2840             CMP      R0,#+64
   \   000000DA   0xD104             BNE.N    ??UserAppSM_FuntionSelect_10
    467              {
    468                UserApp_CursorPosition = LINE1_END_ADDR-9;
   \   000000DC   0x200A             MOVS     R0,#+10
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   000000E2   0x7008             STRB     R0,[R1, #+0]
   \   000000E4   0xE013             B.N      ??UserAppSM_FuntionSelect_9
    469              }
    470              
    471              /* Otherwise just increment  */
    472              else
    473              {
    474                //the cursor is in the second line
    475                if(UserApp_CursorPosition>=0x40)
   \                     ??UserAppSM_FuntionSelect_10: (+1)
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000000EA   0x7800             LDRB     R0,[R0, #+0]
   \   000000EC   0x2840             CMP      R0,#+64
   \   000000EE   0xDB07             BLT.N    ??UserAppSM_FuntionSelect_11
    476                {
    477                  UserApp_CursorPosition-=11;
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000000F4   0x7800             LDRB     R0,[R0, #+0]
   \   000000F6   0x380B             SUBS     R0,R0,#+11
   \   000000F8   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   000000FC   0x7008             STRB     R0,[R1, #+0]
   \   000000FE   0xE006             B.N      ??UserAppSM_FuntionSelect_9
    478                }
    479                //the cursor is in first line
    480                else
    481                {
    482                UserApp_CursorPosition-=5;
   \                     ??UserAppSM_FuntionSelect_11: (+1)
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000104   0x7800             LDRB     R0,[R0, #+0]
   \   00000106   0x1F40             SUBS     R0,R0,#+5
   \   00000108   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000010C   0x7008             STRB     R0,[R1, #+0]
    483                }
    484              }
    485               LCDCommand(LCD_ADDRESS_CMD | UserApp_CursorPosition);
   \                     ??UserAppSM_FuntionSelect_9: (+1)
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000112   0x7800             LDRB     R0,[R0, #+0]
   \   00000114   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000118   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011A   0x.... 0x....      BL       LCDCommand
    486            }
    487            /*confirm the selection and change the message */
    488            if(WasButtonPressed(BUTTON2))
   \                     ??UserAppSM_FuntionSelect_7: (+1)
   \   0000011E   0x2002             MOVS     R0,#+2
   \   00000120   0x.... 0x....      BL       WasButtonPressed
   \   00000124   0x2800             CMP      R0,#+0
   \   00000126   0xD029             BEQ.N    ??UserAppSM_FuntionSelect_12
    489            {
    490              ButtonAcknowledge(BUTTON2);
   \   00000128   0x2002             MOVS     R0,#+2
   \   0000012A   0x.... 0x....      BL       ButtonAcknowledge
    491              {
    492                switch(UserApp_CursorPosition)
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000132   0x7800             LDRB     R0,[R0, #+0]
   \   00000134   0x2800             CMP      R0,#+0
   \   00000136   0xD008             BEQ.N    ??UserAppSM_FuntionSelect_13
   \   00000138   0x2805             CMP      R0,#+5
   \   0000013A   0xD00A             BEQ.N    ??UserAppSM_FuntionSelect_14
   \   0000013C   0x280A             CMP      R0,#+10
   \   0000013E   0xD00C             BEQ.N    ??UserAppSM_FuntionSelect_15
   \   00000140   0x2840             CMP      R0,#+64
   \   00000142   0xD00E             BEQ.N    ??UserAppSM_FuntionSelect_16
   \   00000144   0x284B             CMP      R0,#+75
   \   00000146   0xD010             BEQ.N    ??UserAppSM_FuntionSelect_17
   \   00000148   0xE012             B.N      ??UserAppSM_FuntionSelect_18
    493                {
    494                  //decide the message content on the basis of cursor position
    495                  case 0x00:
    496                    u8TransMessage[1]=00;
   \                     ??UserAppSM_FuntionSelect_13: (+1)
   \   0000014A   0x2000             MOVS     R0,#+0
   \   0000014C   0x....             LDR.N    R1,??DataTable8_5
   \   0000014E   0x7048             STRB     R0,[R1, #+1]
    497                    break;
   \   00000150   0xE00E             B.N      ??UserAppSM_FuntionSelect_18
    498                  case 0x05:
    499                    u8TransMessage[1]=01;
   \                     ??UserAppSM_FuntionSelect_14: (+1)
   \   00000152   0x2001             MOVS     R0,#+1
   \   00000154   0x....             LDR.N    R1,??DataTable8_5
   \   00000156   0x7048             STRB     R0,[R1, #+1]
    500                    break;
   \   00000158   0xE00A             B.N      ??UserAppSM_FuntionSelect_18
    501                  case 0x0a:
    502                    u8TransMessage[1]=02;
   \                     ??UserAppSM_FuntionSelect_15: (+1)
   \   0000015A   0x2002             MOVS     R0,#+2
   \   0000015C   0x....             LDR.N    R1,??DataTable8_5
   \   0000015E   0x7048             STRB     R0,[R1, #+1]
    503                    break;
   \   00000160   0xE006             B.N      ??UserAppSM_FuntionSelect_18
    504                  case 0x40:
    505                    u8TransMessage[1]=03;
   \                     ??UserAppSM_FuntionSelect_16: (+1)
   \   00000162   0x2003             MOVS     R0,#+3
   \   00000164   0x....             LDR.N    R1,??DataTable8_5
   \   00000166   0x7048             STRB     R0,[R1, #+1]
    506                    break;
   \   00000168   0xE002             B.N      ??UserAppSM_FuntionSelect_18
    507                  case 0x4b:
    508                    u8TransMessage[1]=04;
   \                     ??UserAppSM_FuntionSelect_17: (+1)
   \   0000016A   0x2004             MOVS     R0,#+4
   \   0000016C   0x....             LDR.N    R1,??DataTable8_5
   \   0000016E   0x7048             STRB     R0,[R1, #+1]
    509                    break;
    510                }
    511                boolcallonce=TRUE;
   \                     ??UserAppSM_FuntionSelect_18: (+1)
   \   00000170   0x2001             MOVS     R0,#+1
   \   00000172   0x....             LDR.N    R1,??DataTable8_13
   \   00000174   0x7008             STRB     R0,[R1, #+0]
    512                UserApp_StateMachine = UserAppSM_Idle;
   \   00000176   0x....             LDR.N    R0,??DataTable8_19
   \   00000178   0x....             LDR.N    R1,??DataTable8_3
   \   0000017A   0x6008             STR      R0,[R1, #+0]
    513              }
    514            }
    515          }/*end moudle*/
   \                     ??UserAppSM_FuntionSelect_12: (+1)
   \   0000017C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .data, align 4
   \                     ??u8Funtion1SubMenu:
   \   00000000   0x63 0x6F          DC8 "cool heat comf "
   \              0x6F 0x6C    
   \              0x20 0x68    
   \              0x65 0x61    
   \              0x74 0x20    
   \              0x63 0x6F    
   \              0x6D 0x66    
   \              0x20 0x00    

   \                                 In section .data, align 4
   \                     ??u8Funtion2SubMenu:
   \   00000000   0x61 0x72          DC8 "arefaction aeration"
   \              0x65 0x66    
   \              0x61 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x61    
   \              0x65 0x72    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00    
    516          
    517          /*temprature adjust*/
    518          /*------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    519          static void UserAppSM_TemperSelect(void)
    520          { 
   \                     UserAppSM_TemperSelect: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    521          
    522            u8 u8TMessage[]="temprature: ";
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable8_22
   \   00000008   0x220D             MOVS     R2,#+13
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy
    523            //buffer to save temperature
    524            static u8 u8TCounterMessage[3]={'1','6','\0'};
    525            //initialization
    526            if(boolcallonce)
   \   0000000E   0x....             LDR.N    R0,??DataTable8_13
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD00D             BEQ.N    ??UserAppSM_TemperSelect_0
    527            {
    528              LCDCommand(LCD_CLEAR_CMD);
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x.... 0x....      BL       LCDCommand
    529              LCDMessage(LINE1_START_ADDR,u8TMessage);
   \   0000001C   0xA900             ADD      R1,SP,#+0
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      BL       LCDMessage
    530              LCDMessage(LINE2_START_ADDR,u8TCounterMessage);
   \   00000024   0x....             LDR.N    R1,??DataTable8_23
   \   00000026   0x2040             MOVS     R0,#+64
   \   00000028   0x.... 0x....      BL       LCDMessage
    531              boolcallonce=FALSE;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x....             LDR.N    R1,??DataTable8_13
   \   00000030   0x7008             STRB     R0,[R1, #+0]
    532            }
    533            //button 0and 1 to change temperature
    534            if(WasButtonPressed(BUTTON1))
   \                     ??UserAppSM_TemperSelect_0: (+1)
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x.... 0x....      BL       WasButtonPressed
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD017             BEQ.N    ??UserAppSM_TemperSelect_1
    535            {
    536              ButtonAcknowledge(BUTTON1); 
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0x.... 0x....      BL       ButtonAcknowledge
    537              u8TCounterMessage[1]++;
   \   00000042   0x....             LDR.N    R0,??DataTable8_23
   \   00000044   0x7840             LDRB     R0,[R0, #+1]
   \   00000046   0x1C40             ADDS     R0,R0,#+1
   \   00000048   0x....             LDR.N    R1,??DataTable8_23
   \   0000004A   0x7048             STRB     R0,[R1, #+1]
    538              if(u8TCounterMessage[1]==0x3a)
   \   0000004C   0x....             LDR.N    R0,??DataTable8_23
   \   0000004E   0x7840             LDRB     R0,[R0, #+1]
   \   00000050   0x283A             CMP      R0,#+58
   \   00000052   0xD107             BNE.N    ??UserAppSM_TemperSelect_2
    539              {
    540                u8TCounterMessage[1]='0';
   \   00000054   0x2030             MOVS     R0,#+48
   \   00000056   0x....             LDR.N    R1,??DataTable8_23
   \   00000058   0x7048             STRB     R0,[R1, #+1]
    541                u8TCounterMessage[0]++;
   \   0000005A   0x....             LDR.N    R0,??DataTable8_23
   \   0000005C   0x7800             LDRB     R0,[R0, #+0]
   \   0000005E   0x1C40             ADDS     R0,R0,#+1
   \   00000060   0x....             LDR.N    R1,??DataTable8_23
   \   00000062   0x7008             STRB     R0,[R1, #+0]
    542              }
    543              LCDMessage(LINE2_START_ADDR,u8TCounterMessage);
   \                     ??UserAppSM_TemperSelect_2: (+1)
   \   00000064   0x....             LDR.N    R1,??DataTable8_23
   \   00000066   0x2040             MOVS     R0,#+64
   \   00000068   0x.... 0x....      BL       LCDMessage
    544            }
    545            if(WasButtonPressed(BUTTON0))
   \                     ??UserAppSM_TemperSelect_1: (+1)
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x.... 0x....      BL       WasButtonPressed
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD017             BEQ.N    ??UserAppSM_TemperSelect_3
    546            {
    547              ButtonAcknowledge(BUTTON0);
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x.... 0x....      BL       ButtonAcknowledge
    548              u8TCounterMessage[1]--;
   \   0000007C   0x....             LDR.N    R0,??DataTable8_23
   \   0000007E   0x7840             LDRB     R0,[R0, #+1]
   \   00000080   0x1E40             SUBS     R0,R0,#+1
   \   00000082   0x....             LDR.N    R1,??DataTable8_23
   \   00000084   0x7048             STRB     R0,[R1, #+1]
    549              if(u8TCounterMessage[1]==0x2f)
   \   00000086   0x....             LDR.N    R0,??DataTable8_23
   \   00000088   0x7840             LDRB     R0,[R0, #+1]
   \   0000008A   0x282F             CMP      R0,#+47
   \   0000008C   0xD107             BNE.N    ??UserAppSM_TemperSelect_4
    550              {
    551                u8TCounterMessage[1]=0x39;
   \   0000008E   0x2039             MOVS     R0,#+57
   \   00000090   0x....             LDR.N    R1,??DataTable8_23
   \   00000092   0x7048             STRB     R0,[R1, #+1]
    552                u8TCounterMessage[0]--;
   \   00000094   0x....             LDR.N    R0,??DataTable8_23
   \   00000096   0x7800             LDRB     R0,[R0, #+0]
   \   00000098   0x1E40             SUBS     R0,R0,#+1
   \   0000009A   0x....             LDR.N    R1,??DataTable8_23
   \   0000009C   0x7008             STRB     R0,[R1, #+0]
    553              }
    554              LCDMessage(LINE2_START_ADDR,u8TCounterMessage);
   \                     ??UserAppSM_TemperSelect_4: (+1)
   \   0000009E   0x....             LDR.N    R1,??DataTable8_23
   \   000000A0   0x2040             MOVS     R0,#+64
   \   000000A2   0x.... 0x....      BL       LCDMessage
    555            }
    556            //confirm order
    557            if(WasButtonPressed(BUTTON2))
   \                     ??UserAppSM_TemperSelect_3: (+1)
   \   000000A6   0x2002             MOVS     R0,#+2
   \   000000A8   0x.... 0x....      BL       WasButtonPressed
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xD012             BEQ.N    ??UserAppSM_TemperSelect_5
    558            {
    559              ButtonAcknowledge(BUTTON2);
   \   000000B0   0x2002             MOVS     R0,#+2
   \   000000B2   0x.... 0x....      BL       ButtonAcknowledge
    560           //change message and return to idle
    561              u8TransMessage[2]=(u8TCounterMessage[0]-0x30)*10+u8TCounterMessage[1]-0x30;
   \   000000B6   0x....             LDR.N    R0,??DataTable8_23
   \   000000B8   0x7800             LDRB     R0,[R0, #+0]
   \   000000BA   0x210A             MOVS     R1,#+10
   \   000000BC   0x....             LDR.N    R2,??DataTable8_23
   \   000000BE   0x7852             LDRB     R2,[R2, #+1]
   \   000000C0   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000C4   0x3810             SUBS     R0,R0,#+16
   \   000000C6   0x....             LDR.N    R1,??DataTable8_5
   \   000000C8   0x7088             STRB     R0,[R1, #+2]
    562              boolcallonce=TRUE;
   \   000000CA   0x2001             MOVS     R0,#+1
   \   000000CC   0x....             LDR.N    R1,??DataTable8_13
   \   000000CE   0x7008             STRB     R0,[R1, #+0]
    563              UserApp_StateMachine = UserAppSM_Idle;
   \   000000D0   0x....             LDR.N    R0,??DataTable8_19
   \   000000D2   0x....             LDR.N    R1,??DataTable8_3
   \   000000D4   0x6008             STR      R0,[R1, #+0]
    564            }
    565          
    566          }/*end moudle */
   \                     ??UserAppSM_TemperSelect_5: (+1)
   \   000000D6   0xB005             ADD      SP,SP,#+20
   \   000000D8   0xBD00             POP      {PC}             ;; return

   \                                 In section .data, align 4
   \                     ??u8TCounterMessage:
   \   00000000   0x31 0x36          DC8 49, 54, 0, 0
   \              0x00 0x00    
    567          
    568          
    569          /*windspeed moudle*/
    570          /*------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    571          static void UserAppSM_WindSelect(void)
    572          {
   \                     UserAppSM_WindSelect: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
    573            u8 u8WMessage[]="windspeed :";
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable8_24
   \   00000008   0xC91C             LDM      R1!,{R2-R4}
   \   0000000A   0xC01C             STM      R0!,{R2-R4}
   \   0000000C   0x390C             SUBS     R1,R1,#+12
   \   0000000E   0x380C             SUBS     R0,R0,#+12
    574            //buffer to save windspeed
    575           static u8 u8WindSpeed[]="1";
    576            while(boolcallonce)
   \                     ??UserAppSM_WindSelect_0: (+1)
   \   00000010   0x....             LDR.N    R0,??DataTable8_13
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD00E             BEQ.N    ??UserAppSM_WindSelect_1
    577            {
    578              LCDCommand(LCD_CLEAR_CMD);
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       LCDCommand
    579              LCDMessage(LINE1_START_ADDR,u8WMessage);
   \   0000001E   0xA900             ADD      R1,SP,#+0
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       LCDMessage
    580              LCDMessage(LINE2_START_ADDR,u8WindSpeed);
   \   00000026   0x....             LDR.N    R1,??DataTable8_25
   \   00000028   0x2040             MOVS     R0,#+64
   \   0000002A   0x.... 0x....      BL       LCDMessage
    581              boolcallonce=FALSE;
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x....             LDR.N    R1,??DataTable8_13
   \   00000032   0x7008             STRB     R0,[R1, #+0]
   \   00000034   0xE7EC             B.N      ??UserAppSM_WindSelect_0
    582            }
    583            /*button0 and 1 to change windspeed ----------------
    584            button0 raise windspeed and button1 reduce windspeed
    585            the speed include 1,2,3*/
    586            if(WasButtonPressed(BUTTON1))
   \                     ??UserAppSM_WindSelect_1: (+1)
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x.... 0x....      BL       WasButtonPressed
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD013             BEQ.N    ??UserAppSM_WindSelect_2
    587            {
    588              ButtonAcknowledge(BUTTON1);
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0x.... 0x....      BL       ButtonAcknowledge
    589              if(u8WindSpeed[0]==0x33)
   \   00000046   0x....             LDR.N    R0,??DataTable8_25
   \   00000048   0x7800             LDRB     R0,[R0, #+0]
   \   0000004A   0x2833             CMP      R0,#+51
   \   0000004C   0xD103             BNE.N    ??UserAppSM_WindSelect_3
    590              {
    591                u8WindSpeed[0]=0x31;
   \   0000004E   0x2031             MOVS     R0,#+49
   \   00000050   0x....             LDR.N    R1,??DataTable8_25
   \   00000052   0x7008             STRB     R0,[R1, #+0]
   \   00000054   0xE004             B.N      ??UserAppSM_WindSelect_4
    592              }
    593              else
    594              {
    595              u8WindSpeed[0]++;
   \                     ??UserAppSM_WindSelect_3: (+1)
   \   00000056   0x....             LDR.N    R0,??DataTable8_25
   \   00000058   0x7800             LDRB     R0,[R0, #+0]
   \   0000005A   0x1C40             ADDS     R0,R0,#+1
   \   0000005C   0x....             LDR.N    R1,??DataTable8_25
   \   0000005E   0x7008             STRB     R0,[R1, #+0]
    596              }
    597              LCDMessage(LINE2_START_ADDR,u8WindSpeed);
   \                     ??UserAppSM_WindSelect_4: (+1)
   \   00000060   0x....             LDR.N    R1,??DataTable8_25
   \   00000062   0x2040             MOVS     R0,#+64
   \   00000064   0x.... 0x....      BL       LCDMessage
    598            }
    599            if(WasButtonPressed(BUTTON0))
   \                     ??UserAppSM_WindSelect_2: (+1)
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x.... 0x....      BL       WasButtonPressed
   \   0000006E   0x2800             CMP      R0,#+0
   \   00000070   0xD013             BEQ.N    ??UserAppSM_WindSelect_5
    600            {
    601              ButtonAcknowledge(BUTTON0);
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x.... 0x....      BL       ButtonAcknowledge
    602              if(u8WindSpeed[0]==0x31)
   \   00000078   0x....             LDR.N    R0,??DataTable8_25
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0x2831             CMP      R0,#+49
   \   0000007E   0xD103             BNE.N    ??UserAppSM_WindSelect_6
    603              {
    604                u8WindSpeed[0]=0x33;
   \   00000080   0x2033             MOVS     R0,#+51
   \   00000082   0x....             LDR.N    R1,??DataTable8_25
   \   00000084   0x7008             STRB     R0,[R1, #+0]
   \   00000086   0xE004             B.N      ??UserAppSM_WindSelect_7
    605              }
    606              else
    607              {
    608                u8WindSpeed[0]--;
   \                     ??UserAppSM_WindSelect_6: (+1)
   \   00000088   0x....             LDR.N    R0,??DataTable8_25
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x1E40             SUBS     R0,R0,#+1
   \   0000008E   0x....             LDR.N    R1,??DataTable8_25
   \   00000090   0x7008             STRB     R0,[R1, #+0]
    609              }
    610              LCDMessage(LINE2_START_ADDR,u8WindSpeed);
   \                     ??UserAppSM_WindSelect_7: (+1)
   \   00000092   0x....             LDR.N    R1,??DataTable8_25
   \   00000094   0x2040             MOVS     R0,#+64
   \   00000096   0x.... 0x....      BL       LCDMessage
    611            }
    612            //change message and return to idle
    613            if(WasButtonPressed(BUTTON2))
   \                     ??UserAppSM_WindSelect_5: (+1)
   \   0000009A   0x2002             MOVS     R0,#+2
   \   0000009C   0x.... 0x....      BL       WasButtonPressed
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xD00D             BEQ.N    ??UserAppSM_WindSelect_8
    614            {
    615              ButtonAcknowledge(BUTTON2);
   \   000000A4   0x2002             MOVS     R0,#+2
   \   000000A6   0x.... 0x....      BL       ButtonAcknowledge
    616              {
    617                u8TransMessage[3]=u8WindSpeed[0]-0x30;
   \   000000AA   0x....             LDR.N    R0,??DataTable8_25
   \   000000AC   0x7800             LDRB     R0,[R0, #+0]
   \   000000AE   0x3830             SUBS     R0,R0,#+48
   \   000000B0   0x....             LDR.N    R1,??DataTable8_5
   \   000000B2   0x70C8             STRB     R0,[R1, #+3]
    618                boolcallonce=TRUE;
   \   000000B4   0x2001             MOVS     R0,#+1
   \   000000B6   0x....             LDR.N    R1,??DataTable8_13
   \   000000B8   0x7008             STRB     R0,[R1, #+0]
    619                UserApp_StateMachine = UserAppSM_Idle;
   \   000000BA   0x....             LDR.N    R0,??DataTable8_19
   \   000000BC   0x....             LDR.N    R1,??DataTable8_3
   \   000000BE   0x6008             STR      R0,[R1, #+0]
    620              }
    621            }
    622          }/*end moudle*/
   \                     ??UserAppSM_WindSelect_8: (+1)
   \   000000C0   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .data, align 2
   \                     ??u8WindSpeed:
   \   00000000   0x31 0x00          DC8 "1"
    623          
    624          /*timer moudle*/
    625          /*------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    626          static void UserAppSM_AutoSelect(void)
    627          {
   \                     UserAppSM_AutoSelect: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    628            u8 u8timing[]="timing:";
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable8_26
   \   00000008   0xC90C             LDM      R1!,{R2,R3}
   \   0000000A   0xC00C             STM      R0!,{R2,R3}
   \   0000000C   0x3908             SUBS     R1,R1,#+8
   \   0000000E   0x3808             SUBS     R0,R0,#+8
    629            static u8 u8timelast[3]={'0','0','\0'};
    630            //initialize
    631            if(boolcallonce)
   \   00000010   0x....             LDR.N    R0,??DataTable8_13
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD00D             BEQ.N    ??UserAppSM_AutoSelect_0
    632            {
    633              LCDCommand(LCD_CLEAR_CMD);
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       LCDCommand
    634              LCDMessage(LINE1_START_ADDR,u8timing);
   \   0000001E   0xA900             ADD      R1,SP,#+0
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       LCDMessage
    635              LCDMessage(LINE2_START_ADDR,u8timelast);
   \   00000026   0x....             LDR.N    R1,??DataTable8_27
   \   00000028   0x2040             MOVS     R0,#+64
   \   0000002A   0x.... 0x....      BL       LCDMessage
    636              boolcallonce=FALSE;
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x....             LDR.N    R1,??DataTable8_13
   \   00000032   0x7008             STRB     R0,[R1, #+0]
    637            }
    638            /**/
    639            if(WasButtonPressed(BUTTON1))
   \                     ??UserAppSM_AutoSelect_0: (+1)
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x.... 0x....      BL       WasButtonPressed
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD017             BEQ.N    ??UserAppSM_AutoSelect_1
    640            {
    641              ButtonAcknowledge(BUTTON1); 
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0x.... 0x....      BL       ButtonAcknowledge
    642              u8timelast[1]++;
   \   00000044   0x....             LDR.N    R0,??DataTable8_27
   \   00000046   0x7840             LDRB     R0,[R0, #+1]
   \   00000048   0x1C40             ADDS     R0,R0,#+1
   \   0000004A   0x....             LDR.N    R1,??DataTable8_27
   \   0000004C   0x7048             STRB     R0,[R1, #+1]
    643              if(u8timelast[1]==0x3a)
   \   0000004E   0x....             LDR.N    R0,??DataTable8_27
   \   00000050   0x7840             LDRB     R0,[R0, #+1]
   \   00000052   0x283A             CMP      R0,#+58
   \   00000054   0xD107             BNE.N    ??UserAppSM_AutoSelect_2
    644              {
    645                u8timelast[1]='0';
   \   00000056   0x2030             MOVS     R0,#+48
   \   00000058   0x....             LDR.N    R1,??DataTable8_27
   \   0000005A   0x7048             STRB     R0,[R1, #+1]
    646                u8timelast[0]++;
   \   0000005C   0x....             LDR.N    R0,??DataTable8_27
   \   0000005E   0x7800             LDRB     R0,[R0, #+0]
   \   00000060   0x1C40             ADDS     R0,R0,#+1
   \   00000062   0x....             LDR.N    R1,??DataTable8_27
   \   00000064   0x7008             STRB     R0,[R1, #+0]
    647              }
    648              LCDMessage(LINE2_START_ADDR,u8timelast);
   \                     ??UserAppSM_AutoSelect_2: (+1)
   \   00000066   0x....             LDR.N    R1,??DataTable8_27
   \   00000068   0x2040             MOVS     R0,#+64
   \   0000006A   0x.... 0x....      BL       LCDMessage
    649            }
    650            if(WasButtonPressed(BUTTON0))
   \                     ??UserAppSM_AutoSelect_1: (+1)
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x.... 0x....      BL       WasButtonPressed
   \   00000074   0x2800             CMP      R0,#+0
   \   00000076   0xD017             BEQ.N    ??UserAppSM_AutoSelect_3
    651            {
    652              ButtonAcknowledge(BUTTON0);
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x.... 0x....      BL       ButtonAcknowledge
    653              u8timelast[1]--;
   \   0000007E   0x....             LDR.N    R0,??DataTable8_27
   \   00000080   0x7840             LDRB     R0,[R0, #+1]
   \   00000082   0x1E40             SUBS     R0,R0,#+1
   \   00000084   0x....             LDR.N    R1,??DataTable8_27
   \   00000086   0x7048             STRB     R0,[R1, #+1]
    654              if(u8timelast[1]==0x2f)
   \   00000088   0x....             LDR.N    R0,??DataTable8_27
   \   0000008A   0x7840             LDRB     R0,[R0, #+1]
   \   0000008C   0x282F             CMP      R0,#+47
   \   0000008E   0xD107             BNE.N    ??UserAppSM_AutoSelect_4
    655              {
    656                u8timelast[1]=0x39;
   \   00000090   0x2039             MOVS     R0,#+57
   \   00000092   0x....             LDR.N    R1,??DataTable8_27
   \   00000094   0x7048             STRB     R0,[R1, #+1]
    657                u8timelast[0]--;
   \   00000096   0x....             LDR.N    R0,??DataTable8_27
   \   00000098   0x7800             LDRB     R0,[R0, #+0]
   \   0000009A   0x1E40             SUBS     R0,R0,#+1
   \   0000009C   0x....             LDR.N    R1,??DataTable8_27
   \   0000009E   0x7008             STRB     R0,[R1, #+0]
    658              }
    659              LCDMessage(LINE2_START_ADDR,u8timelast);
   \                     ??UserAppSM_AutoSelect_4: (+1)
   \   000000A0   0x....             LDR.N    R1,??DataTable8_27
   \   000000A2   0x2040             MOVS     R0,#+64
   \   000000A4   0x.... 0x....      BL       LCDMessage
    660            }
    661           if(WasButtonPressed(BUTTON2))
   \                     ??UserAppSM_AutoSelect_3: (+1)
   \   000000A8   0x2002             MOVS     R0,#+2
   \   000000AA   0x.... 0x....      BL       WasButtonPressed
   \   000000AE   0x2800             CMP      R0,#+0
   \   000000B0   0xD018             BEQ.N    ??UserAppSM_AutoSelect_5
    662            {
    663              ButtonAcknowledge(BUTTON2);
   \   000000B2   0x2002             MOVS     R0,#+2
   \   000000B4   0x.... 0x....      BL       ButtonAcknowledge
    664              {
    665                u8TransMessage[4]=(u8timelast[0]-0x30)*10+u8timelast[1]-0x30;;
   \   000000B8   0x....             LDR.N    R0,??DataTable8_27
   \   000000BA   0x7800             LDRB     R0,[R0, #+0]
   \   000000BC   0x210A             MOVS     R1,#+10
   \   000000BE   0x....             LDR.N    R2,??DataTable8_27
   \   000000C0   0x7852             LDRB     R2,[R2, #+1]
   \   000000C2   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000C6   0x3810             SUBS     R0,R0,#+16
   \   000000C8   0x....             LDR.N    R1,??DataTable8_5
   \   000000CA   0x7108             STRB     R0,[R1, #+4]
    666                u32timerlasting=u8TransMessage[4]*20;
   \   000000CC   0x....             LDR.N    R0,??DataTable8_5
   \   000000CE   0x7900             LDRB     R0,[R0, #+4]
   \   000000D0   0x2114             MOVS     R1,#+20
   \   000000D2   0x4348             MULS     R0,R1,R0
   \   000000D4   0x....             LDR.N    R1,??DataTable8_6
   \   000000D6   0x6008             STR      R0,[R1, #+0]
    667                boolcallonce=TRUE;
   \   000000D8   0x2001             MOVS     R0,#+1
   \   000000DA   0x....             LDR.N    R1,??DataTable8_13
   \   000000DC   0x7008             STRB     R0,[R1, #+0]
    668                UserApp_StateMachine = UserAppSM_Idle;
   \   000000DE   0x....             LDR.N    R0,??DataTable8_19
   \   000000E0   0x....             LDR.N    R1,??DataTable8_3
   \   000000E2   0x6008             STR      R0,[R1, #+0]
    669              }
    670            } 
    671          }/*end moudle*/
   \                     ??UserAppSM_AutoSelect_5: (+1)
   \   000000E4   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .data, align 4
   \                     ??u8timelast:
   \   00000000   0x30 0x30          DC8 48, 48, 0, 0
   \              0x00 0x00    
    672          
    673          /*turn off all the light */
    674          /*------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    675          static void UserAppSM_SleepSelect(void)
    676          {
   \                     UserAppSM_SleepSelect: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    677            u8TransMessage[5]=~u8TransMessage[5];
   \   00000002   0x....             LDR.N    R0,??DataTable8_5
   \   00000004   0x7940             LDRB     R0,[R0, #+5]
   \   00000006   0x43C0             MVNS     R0,R0
   \   00000008   0x....             LDR.N    R1,??DataTable8_5
   \   0000000A   0x7148             STRB     R0,[R1, #+5]
    678             LedToggle(LCD_RED);
   \   0000000C   0x2008             MOVS     R0,#+8
   \   0000000E   0x.... 0x....      BL       LedToggle
    679             LedToggle(LCD_GREEN);
   \   00000012   0x2009             MOVS     R0,#+9
   \   00000014   0x.... 0x....      BL       LedToggle
    680             LedToggle(LCD_BLUE);
   \   00000018   0x200A             MOVS     R0,#+10
   \   0000001A   0x.... 0x....      BL       LedToggle
    681            boolcallonce=TRUE;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x....             LDR.N    R1,??DataTable8_13
   \   00000022   0x7008             STRB     R0,[R1, #+0]
    682            UserApp_StateMachine = UserAppSM_Idle;
   \   00000024   0x....             LDR.N    R0,??DataTable8_19
   \   00000026   0x....             LDR.N    R1,??DataTable8_3
   \   00000028   0x6008             STR      R0,[R1, #+0]
    683          }
   \   0000002A   0xBD01             POP      {R0,PC}          ;; return
    684          /*-------------------------------------------------------------------------------------------------------------------*/
    685          /* Handle an error */
    686          static void UserAppSM_Error(void)          
                             ^
Warning[Pe177]: function "UserAppSM_Error" was declared but never referenced

  static u32 UserApp_u32Timeout;                      /* Timeout counter used across states */
             ^
"F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpg_common\application\user_app.c",68  Warning[Pe177]: 
          variable "UserApp_u32Timeout" was declared but never referenced

  static u8 u8indoortemperature[144][10];
            ^
"F:\ѧϰ\EiE\eiegit\dlpro\firmware_mpg_common\application\user_app.c",78  Warning[Pe550]: 
          variable "u8indoortemperature" was set but never used
    687          {
    688            
    689          } /* end UserAppSM_Error() */
    690          
    691          /*-------------------------------------------------------------------------------------------------------------------*/
    692          /* State to sit in if init failed */

   \                                 In section .text, align 4, keep-with-next
    693          static void UserAppSM_FailedInit(void)          
    694          {
    695              
    696          } /* end UserAppSM_FailedInit() */
   \                     UserAppSM_FailedInit: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     u8envirtemperature

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     G_stAntSetupData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     UserApp_CursorPosition

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     UserApp_StateMachine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     ??u16oneminute

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x........         DC32     u8TransMessage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x........         DC32     u32timerlasting

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x........         DC32     ??u8onecounter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x........         DC32     ??u8nowindoor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x........         DC32     ??u8tencounter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x........         DC32     u8indoortemperature

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x........         DC32     ??u8stringtab

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x........         DC32     u8off

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x........         DC32     boolcallonce

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x........         DC32     u8Funtion1Message

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0x........         DC32     u8Funtion2Message

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \   00000000   0x........         DC32     u8on

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \   00000000   0x........         DC32     G_eAntApiCurrentMessageClass

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \   00000000   0x........         DC32     G_au8AntApiCurrentData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \   00000000   0x........         DC32     UserAppSM_Idle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_20:
   \   00000000   0x........         DC32     ??u8Funtion1SubMenu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_21:
   \   00000000   0x........         DC32     ??u8Funtion2SubMenu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_22:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_23:
   \   00000000   0x........         DC32     ??u8TCounterMessage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_24:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_25:
   \   00000000   0x........         DC32     ??u8WindSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_26:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_27:
   \   00000000   0x........         DC32     ??u8timelast

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x74 0x65          DC8 "temprature: "
   \              0x6D 0x70    
   \              0x72 0x61    
   \              0x74 0x75    
   \              0x72 0x65    
   \              0x3A 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x77 0x69          DC8 "windspeed :"
   \              0x6E 0x64    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x20    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x74 0x69          DC8 "timing:"
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x3A 0x00    
    697          /*--------------------------------------------------------------------------------------------------------------------*/
    698          /* End of File                                                                                                        */
    699          /*--------------------------------------------------------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   UserAppInitialize
         8   -> AntChannelConfig
         8   -> AntOpenChannel
         8   -> LCDCommand
       8   UserAppRunActiveState
         8   -- Indirect call
      16   UserAppSM_AutoSelect
        16   -> ButtonAcknowledge
        16   -> LCDCommand
        16   -> LCDMessage
        16   -> WasButtonPressed
       0   UserAppSM_FailedInit
       8   UserAppSM_FuntionSelect
         8   -> ButtonAcknowledge
         8   -> LCDCommand
         8   -> LCDMessage
         8   -> WasButtonPressed
       8   UserAppSM_Idle
         8   -> AntQueueBroadcastMessage
         8   -> AntReadData
         8   -> ButtonAcknowledge
         8   -> DebugLineFeed
         8   -> DebugPrintNumber
         8   -> DebugPrintf
         8   -> LCDCommand
         8   -> LCDMessage
         8   -> WasButtonPressed
       8   UserAppSM_SleepSelect
         8   -> LedToggle
       0   UserAppSM_SwitchSelect
      24   UserAppSM_TemperSelect
        24   -> ButtonAcknowledge
        24   -> LCDCommand
        24   -> LCDMessage
        24   -> WasButtonPressed
        24   -> __aeabi_memcpy
      24   UserAppSM_WindSelect
        24   -> ButtonAcknowledge
        24   -> LCDCommand
        24   -> LCDMessage
        24   -> WasButtonPressed


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_20
       4  ??DataTable8_21
       4  ??DataTable8_22
       4  ??DataTable8_23
       4  ??DataTable8_24
       4  ??DataTable8_25
       4  ??DataTable8_26
       4  ??DataTable8_27
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
      16  ?_0
      12  ?_1
       8  ?_2
       4  G_u32UserAppFlags
     166  UserAppInitialize
      12  UserAppRunActiveState
     230  UserAppSM_AutoSelect
       2  UserAppSM_FailedInit
     382  UserAppSM_FuntionSelect
    1078  UserAppSM_Idle
      44  UserAppSM_SleepSelect
      34  UserAppSM_SwitchSelect
     218  UserAppSM_TemperSelect
     194  UserAppSM_WindSelect
       1  UserApp_CursorPosition
       4  UserApp_StateMachine
       1  boolcallonce
       2  u16oneminute
       4  u32timerlasting
      24  u8Funtion1Message
      16  u8Funtion1SubMenu
      16  u8Funtion2Message
      20  u8Funtion2SubMenu
       4  u8TCounterMessage
       8  u8TransMessage
       2  u8WindSpeed
     144  u8envirtemperature
    1440  u8indoortemperature
       1  u8nowindoor
       4  u8off
       4  u8on
       1  u8onecounter
       2  u8stringtab
       1  u8tencounter
       4  u8timelast

 
 1 599 bytes in section .bss
   108 bytes in section .data
    36 bytes in section .rodata
 2 472 bytes in section .text
 
 2 472 bytes of CODE  memory
    36 bytes of CONST memory
 1 707 bytes of DATA  memory

Errors: none
Warnings: 6
